!function (a) {
    a.Sewise = a.Sewise || {
            name: "Sewise Player",
            version: "3.0.0",
            build: "2015.12.11 19:00"
        }, a.SewisePlayerSkin = a.SewisePlayerSkin || {}
}(window), function () {
    Sewise.Utils = {
        jsonp: function (a) {
            var b = a.url, c = a.jsonp, d = a.jsonpCallback, e = a.data, f = a.success, g = "";
            for (var h in e)g += "&" + h + "=" + e[h];
            g = "?" + g.slice(1), void 0 === c && (c = "callback"), void 0 === d && (d = "callbackFun" + (new Date).getTime());
            var i = "&" + c + "=" + d, j = b + g + i, k = document.createElement("script");
            k.setAttribute("type", "text/javascript"), k.src = j, document.body.appendChild(k), window[d] = f, k.onload = k.onreadystatechange = function () {
                this.readyState && "loaded" != this.readyState && "complete" != this.readyState || document.body.removeChild(k)
            }
        }, getScript: function (a) {
            var b = a.url, c = a.data, d = a.success, e = "";
            for (var f in c)e += "&" + f + "=" + c[f];
            e = "?" + e.slice(1);
            var g = b + e, h = document.createElement("script");
            h.setAttribute("type", "text/javascript"), h.src = g, document.body.appendChild(h), h.onload = h.onreadystatechange = function () {
                d(), this.readyState && "loaded" != this.readyState && "complete" != this.readyState || document.body.removeChild(h)
            }
        }, getParameters: function (a) {
            var b, c, d = document.getElementsByTagName("script");
            try {
                for (var e = d.length, f = 0; e > f; f++) {
                    var g = d[f].src.split("#"), h = g[0], i = h.split("/");
                    if (h = 1 == i.length ? i[0] : i[i.length - 1], h == a[0] || h == a[1]) {
                        if (b = g.length > 1 ? g[1].split("&") : [], c = d[f], h == a[0] || h == a[1]) {
                            var j = g[0].lastIndexOf("/");
                            j > 0 && (Sewise.localPath = g[0].slice(0, j + 1))
                        }
                        break
                    }
                }
                for (var k, l, m, n = {}, o = 0, p = b.length; p > o; o++)k = b[o].split("="), l = k[0], m = k[1], "undefined" == typeof n[l] ? n[l] = m : "string" == typeof n[l] ? (n[l] = [n[l]], n[l].push(m)) : n[l].push(m);
                return n.scriptElement = c, n
            } catch (q) {
                return []
            }
        }, parseURL: function (a) {
            var b, c = {
                protocol: /([^\/]+:)\/\/(.*)/i,
                host: /(^[^\:\/]+)((?:\/|:|$)?.*)/,
                port: /\:?([^\/]*)(\/?.*)/,
                pathname: /([^\?#]+)(\??[^#]*)(#?.*)/
            }, d = {};
            d.href = a;
            for (var e in c)b = c[e].exec(a), b && (d[e] = b[1], a = b[2], "" === a && (a = "/"), "pathname" === e && (d.pathname = b[1], d.search = b[2], d.hash = b[3]));
            return d.segments = d.pathname.split("/"), d
        }, object: {
            isEmpty: function (a) {
                for (var b in a)return !1;
                return !0
            }, paramsLength: function (a) {
                var b = 0;
                for (var c in a)b++;
                return b
            }
        }, browser: {
            versions: function () {
                {
                    var a = navigator.userAgent;
                    navigator.appVersion
                }
                return {
                    trident: a.indexOf("Trident") > -1,
                    presto: a.indexOf("Presto") > -1,
                    webKit: a.indexOf("AppleWebKit") > -1,
                    gecko: a.indexOf("Gecko") > -1 && -1 == a.indexOf("KHTML"),
                    mobile: !!a.match(/AppleWebKit.*Mobile.*/),
                    ios: !!a.match(/\(i[^;]+;( U;)? CPU.+Mac OS X/),
                    android: a.indexOf("Android") > -1,
                    iPhone: a.indexOf("iPhone") > -1,
                    iPad: a.indexOf("iPad") > -1,
                    webApp: -1 == a.indexOf("Safari")
                }
            }(),
            supportH5: function () {
                var a = !1;
                return navigator.geolocation && (a = !0), a
            }(),
            supportFlash: function () {
                if (navigator.mimeTypes.length > 0) {
                    var a = navigator.mimeTypes["application/x-shockwave-flash"];
                    return void 0 !== a ? void 0 !== a.enabledPlugin : !1
                }
                if (self.ActiveXObject)try {
                    return new ActiveXObject("ShockwaveFlash.ShockwaveFlash"), !0
                } catch (b) {
                    return !1
                }
            }(),
            supportHls: function () {
                return window.MediaSource && window.MediaSource.isTypeSupported('video/mp4; codecs="avc1.42E01E,mp4a.40.2"')
            }(),
            language: (navigator.browserLanguage || navigator.language).toLowerCase(),
            ieVersionNumber: function () {
                /MSIE\s*(\d+)/i.test(navigator.userAgent);
                var a = parseInt(RegExp.$1 ? RegExp.$1 : 0);
                return a
            }()
        }, location: {
            hostname: function (a) {
                if (a) {
                    var b = document.createElement("a");
                    return b.href = a, b.hostname
                }
                return window.location.hostname
            }, port: function (a) {
                if (a) {
                    var b = document.createElement("a");
                    return b.href = a, b.port
                }
                return window.location.port
            }, porthost: function (a) {
                var b, c;
                if (a) {
                    var d = document.createElement("a");
                    d.href = a, b = d.hostname, c = d.port
                } else b = window.location.hostname, c = window.location.port;
                var e = b;
                return c && "0" !== c && "" !== c && (e = b + ":" + c), e
            }
        }, loader: {
            loadCssFile: function (a, b) {
                function c(a) {
                    for (var b = /js$/i.test(a), c = document.getElementsByTagName(b ? "script" : "link"), d = 0; d < c.length; d++)if (-1 != c[d][b ? "src" : "href"].indexOf(a))return !0;
                    return !1
                }

                if (!c(a)) {
                    var d = document.createElement("link");
                    d.rel = "stylesheet", d.href = a, b && (d.onerror = function () {
                        b()
                    }), document.getElementsByTagName("head")[0].appendChild(d)
                }
            }, loadJsFile: function (a, b, c, d, e) {
                var f = document.getElementsByTagName("head")[0], g = null;
                !a && !e || "override" == a ? (g = document.createElement("script"), g.type = "text/javascript", g.charset = "utf-8", g.src = b, c && (g.onload = g.onreadystatechange = function () {
                    return g.ready ? !1 : void(g.readyState && "loaded" != g.readyState && "complete" != g.readyState || (g.ready = !0, c()))
                }), d && (g.onerror = function () {
                    d()
                }), f.appendChild(g)) : c && c()
            }
        }
    }
}(), function (a) {
    a.ContextMenu = function (a, b) {
        a.oncontextmenu = function (c) {
            c.preventDefault ? c.preventDefault() : c.returnValue = !1;
            var d = document.createElement("div");
            d.innerHTML = '<ul class="sewise_player_contextmenu_items"><li>' + b.playerName + "</li><li>" + b.playerVersion + "</li><li>" + b.buildDate + "</li><li>--------------------------------------------------</li><li>" + b.copyright + "</li></ul>", d.style.position = "absolute", d.style.width = "300px", d.style.background = "#eee", d.style.border = "1px solid #ccc", d.style.boxShadow = "3px 3px 3px rgba(0, 0, 0, 0.3)", d.style.left = c.clientX - a.getBoundingClientRect().left + "px", d.style.top = c.clientY - a.getBoundingClientRect().top + "px", d.style.zIndex = 10, a.appendChild(d);
            var e = document.createElement("style");
            e.innerHTML = 'ul.sewise_player_contextmenu_items {margin:0; padding:0; }ul.sewise_player_contextmenu_items li {list-style: none; padding: 5px 20px; cursor: default; font-family: "MS Sans Serif", Geneva, sans-serif; font-size: 10px; }ul.sewise_player_contextmenu_items li:hover {background: #888; color: #fff; }', a.appendChild(e), document.onmousedown = function (c) {
                c.target.textContent == b.playerName && window.open("http://zhibo.speiyou.com/index.html", "_blank"), d && (a.removeChild(d), a.removeChild(e), d = null, e = null)
            }
        }
    }
}(window.Sewise), function (a) {
    a.Sewise.localPath + "js/jquery.min.js"
}(window), function (a) {
    a.SkinUtils = {
        stringer: {
            time2FigFill: function (a) {
                var b;
                return a = Math.floor(a), b = 10 > a ? "0" + a : String(a)
            }, secondsToHMS: function (a) {
                if (!(0 > a)) {
                    var b = this.time2FigFill(Math.floor(a / 3600)), c = this.time2FigFill(a / 60 % 60), d = this.time2FigFill(a % 60);
                    return b + ":" + c + ":" + d
                }
            }, secondsToMS: function (a) {
                if (!(0 > a)) {
                    var b = this.time2FigFill(a / 60), c = this.time2FigFill(a % 60);
                    return b + ":" + c
                }
            }, dateToTimeString: function (a) {
                var b;
                b = a ? a : new Date;
                var c = b.getFullYear(), d = b.getMonth() + 1, e = b.getDate(), f = this.time2FigFill(b.getHours()), g = this.time2FigFill(b.getMinutes()), h = this.time2FigFill(b.getSeconds());
                return c + "-" + d + "-" + e + " " + f + ":" + g + ":" + h
            }, dateToTimeStr14: function (a) {
                var b = a.getFullYear(), c = this.time2FigFill(a.getMonth() + 1), d = this.time2FigFill(a.getDate()), e = this.time2FigFill(a.getHours()), f = this.time2FigFill(a.getMinutes()), g = this.time2FigFill(a.getSeconds());
                return b + c + d + e + f + g
            }, dateToStrHMS: function (a) {
                var b = this.time2FigFill(a.getHours()), c = this.time2FigFill(a.getMinutes()), d = this.time2FigFill(a.getSeconds());
                return b + ":" + c + ":" + d
            }, dateToYMD: function (a) {
                var b = a.getFullYear(), c = this.time2FigFill(a.getMonth() + 1), d = this.time2FigFill(a.getUTCDate());
                return b + "-" + c + "-" + d
            }, hmsToDate: function (a) {
                var b = a.split(":"), c = b[0] ? b[0] : 0, d = b[1] ? b[1] : 0, e = b[2] ? b[2] : 0, f = new Date;
                return f.setHours(c, d, e), f
            }, hmsToSeconds: function (a) {
                var b = a.split(":"), c = b[0] ? parseInt(b[0]) : 0, d = b[1] ? parseInt(b[1]) : 0, e = b[2] ? parseInt(b[2]) : 0, f = 3600 * c + 60 * d + e;
                return f
            }
        },
        language: {
            zh_cn: {
                stop: "停止播放",
                pause: "暂停",
                play: "播放",
                fullScreen: "全屏",
                normalScreen: "恢复",
                soundOn: "打开声音",
                soundOff: "关闭声音",
                clarity: "清晰度",
                titleTip: "正在播放：",
                claritySetting: "清晰度设置",
                clarityOk: "确定",
                clarityCancel: "取消",
                backToLive: "回到直播",
                loading: "缓冲",
                subtitles: "字幕",
                "default": "默认"
            },
            en_us: {
                stop: "Stop",
                pause: "Pause",
                play: "Play",
                fullScreen: "Full Screen",
                normalScreen: "Normal Screen",
                soundOn: "Sound On",
                soundOff: "Sound Off",
                clarity: "Clarity",
                titleTip: "Playing: ",
                claritySetting: "Definition Setting",
                clarityOk: "OK",
                clarityCancel: "Cancel",
                backToLive: "Back To Live",
                loading: "Loading",
                subtitles: "Subtitles",
                "default": "Default"
            },
            lang: {},
            init: function (a) {
                switch (a) {
                    case"en_US":
                        this.lang = this.en_us;
                        break;
                    case"zh_CN":
                        this.lang = this.zh_cn;
                        break;
                    default:
                        this.lang = this.zh_cn
                }
            },
            getString: function (a) {
                return this.lang[a]
            }
        },
        browser: {
            isXiaoMiBrowser: function () {
                var a = navigator.userAgent;
                return a.indexOf("MiuiBrowser") >= 0 ? !0 : !1
            }, isHuaweiBrowser: function () {
                var a = navigator.userAgent.toLowerCase();
                return a.indexOf("huawei") >= 0 ? !0 : !1
            }, versions: function () {
                {
                    var a = navigator.userAgent;
                    navigator.appVersion
                }
                return {
                    trident: a.indexOf("Trident") > -1,
                    presto: a.indexOf("Presto") > -1,
                    webKit: a.indexOf("AppleWebKit") > -1,
                    gecko: a.indexOf("Gecko") > -1 && -1 == a.indexOf("KHTML"),
                    mobile: !!a.match(/AppleWebKit.*Mobile.*/),
                    ios: !!a.match(/\(i[^;]+;( U;)? CPU.+Mac OS X/),
                    android: a.indexOf("Android") > -1 || a.indexOf("Linux") > -1,
                    iPhone: a.indexOf("iPhone") > -1,
                    iPad: a.indexOf("iPad") > -1,
                    webApp: -1 == a.indexOf("Safari")
                }
            }()
        }
    }
}(window.Sewise), function (a) {
    a.GlobalConstant = {
        FLASH: "flash",
        HTML5: "html5",
        VOD: "vod",
        LIVE: "live",
        AUDIO: "audio",
        VIDEO: "video",
        FLV: "flv",
        MP4: "mp4",
        RTMP: "rtmp",
        HTTP: "http",
        M3U8: "m3u8",
        MP3: "mp3",
        PLAYER_NAME: a.name,
        PLAYER_COPYRIGHT: "(C) All right reserved the SEWISE inc 2015-2016",
        PLAYER_VERSION: "Version: " + a.version,
        BUILD_DATE: "Build: " + a.build
    }
}(window.Sewise), function (a) {
    a.GlobalVars = function () {
        this.clarities = []
    }
}(window.Sewise), function (a) {
    a.Log = {
        trace: !0, logPrefix: "(SewisePlayer)", log: function () {
            if (this.trace && "undefined" != typeof console) {
                var a = makeArray(arguments);
                return this.logPrefix && a.unshift(this.logPrefix), console.log.apply(console, a), this
            }
        }
    }
}(window.Sewise), function (a) {
    a.Event = {
        on: function (a, b) {
            this.eventListeners || (this.eventListeners = {});
            this.eventListeners[a] || (this.eventListeners[a] = []), this.eventListeners[a].push(b)
        }, off: function (a, b) {
            if (!this.eventListeners)return !1;
            if (!this.eventListeners[a])return !1;
            var c = this.eventListeners[a] || [], d = c.indexOf(b);
            d >= 0 && c.splice(d, 1)
        }, fireEvent: function (a, b) {
            if (!this.eventListeners)return !1;
            if (!this.eventListeners[a])return !1;
            var c = this.eventListeners[a] || [];
            $(c).each(function (a, c) {
                c(b)
            })
        }
    }
}(window.Sewise), function (a) {
    a.SewisePlayerEvent = {
        PARAMS_READY: "paramsReady",
        PLAYER_READY: "playerReady",
        PLAYER_SKIN_LOADED: "player_skin_loaded",
        PLAYER_SKIN_LOADED_ERROR: "player_skin_loaded_error",
        STREAMS_DATA_READY: "streams_data_ready",
        STREAMS_DATA_FAILED: "streams_data_failed",
        GET_VOD_STREAMS: "get_vod_streams",
        GET_LIVE_STREAMS: "get_live_streams",
        GET_SHIFT_STREAMS: "get_shift_streams",
        PLAY_VIDEO: "play_video",
        PLAY_NEXT: "play_next",
        PLAY_START: "start",
        PLAY_PAUSE: "pause",
        PLAY_ENDED: "ended",
        DURATION_CHANGE: "durationChange",
        TIME_UPDATE: "timeupdate",
        LOAD_PROGRESS: "loadProgress",
        BUFFER_PROGRESS: "bufferProgress",
        METADATA: "metadata",
        SEEK: "seek",
        LOAD_OPEN: "bufferBegin",
        LOAD_COMPLETE: "bufferComplete",
        BEFORE_PLAY: "beforePlay",
        INFO_LOADED: "info_loaded",
        SHARE_VIDEO: "shareVideo",
        UPDATE_VIDEO_URL: "updateVideoUrl",
        CONTROLBAR_SHOW_SATE: "controlbarShowState"
    }
}(window.Sewise), function (a, b) {
    var c = a.Sewise.FlashVideo = function (a) {
        this.instanceID = null, this.flashPlayer = null, this._duration = 0, this.currentPlayTime = 0, this.instanceID = "flashvideo_" + c.guid++, this.videoUrl = "", this.isLive = a, this.type = "", this.subWindow = null;
        var b = this.instanceID;
        c.flashInstances[b] = this
    };
    b.extend(c, {guid: 0, flashInstances: {}}), c.fn = c.prototype, a.playerReady = function (a) {
        var b = c.flashInstances[a];
        b && (b.flashReady(), b.fireEvent("flash_playerReady"))
    }, a.onStart = function (a) {
        var b = c.flashInstances[a];
        b && b.fireEvent("play")
    }, a.onBeforePlay = function (a) {
        var b = c.flashInstances[a];
        b && b.fireEvent("beforePlay")
    }, a.onStop = function (a) {
        var b = c.flashInstances[a];
        b && b.fireEvent("ended")
    }, a.onMetadata = function (a, b) {
        var d = c.flashInstances[b];
        if (d) {
            var e = JSON.parse(a);
            e.duration && (d._duration = e.duration), d.fireEvent("durationchange"), d.fireEvent("loadedmetadata", e)
        }
    }, a.onClarity = function () {
    }, a.onPause = function (a) {
        var b = c.flashInstances[a];
        b && b.fireEvent("pause")
    }, a.onSeek = function (a, b) {
        var d = c.flashInstances[b];
        d && d.fireEvent("seeking", a)
    }, a.onPlayTime = function (a, b) {
        var d = c.flashInstances[b];
        if (d) {
            if (d.isLive && "m3u8" == d.type) {
                var e = new Date;
                e.setTime(e.getTime() + 1e3 * a), d.currentPlayTime = e
            } else d.currentPlayTime = a;
            d.fireEvent("timeupdate")
        }
    }, a.onBuffer = function (a, b) {
        var d = c.flashInstances[b];
        d && d.fireEvent("bufferprogress", a)
    }, a.onBufferEmpty = function (a) {
        var b = c.flashInstances[a];
        b && b.fireEvent("seeking")
    }, a.onBufferFull = function (a) {
        var b = c.flashInstances[a];
        b && b.fireEvent("seeked")
    }, a.onLoadProgress = function (a, b) {
        var d = c.flashInstances[b];
        d && d.fireEvent("progress", a)
    }, a.onFlashStageClick = function (a) {
        var b = c.flashInstances[a];
        b && b.fireEvent("singleClick")
    }, a.onFlashDoubleClick = function (a) {
        var b = c.flashInstances[a];
        b && b.fireEvent("doubleClick")
    }, a.onresize = function () {
    }, c.fn.handleIframeFlashCall = function () {
        var b = this.subWindow;
        b.onPlayTime = function (b, c) {
            a.onPlayTime(b, c)
        }, b.playerReady = function (b) {
            a.playerReady(b)
        }, b.onBeforePlay = function (b) {
            a.onBeforePlay(b)
        }, b.onStart = function (b) {
            a.onStart(b)
        }, b.onStop = function (b) {
            a.onStop(b)
        }, b.onMetadata = function (b, c) {
            a.onMetadata(b, c)
        }, b.onPause = function (b) {
            a.onPause(b)
        }, b.onSeek = function (b, c) {
            a.onSeek(b, c)
        }, b.onBuffer = function (b, c) {
            a.onBuffer(b, c)
        }, b.onBufferEmpty = function (b) {
            a.onBufferEmpty(b)
        }, b.onBufferFull = function (b) {
            a.onBufferFull(b)
        }, b.onLoadProgress = function (b, c) {
            a.onLoadProgress(b, c)
        }, b.onFlashStageClick = function (b) {
            a.onFlashStageClick(b)
        }, b.onFlashDoubleClick = function (b) {
            a.onFlashDoubleClick(b)
        }, b.onClarity = function () {
        }
    }, a.Sewise.Event.addEventListener = a.Sewise.Event.on, a.Sewise.Event.removeEventListener = a.Sewise.Event.off, b.extend(c.prototype, a.Sewise.Event, {
        play: function () {
            this.flashPlayer && this.flashPlayer.doPlay()
        }, stop: function () {
            this.flashPlayer && this.flashPlayer.doStop()
        }, pause: function () {
            //this.flashPlayer && this.flashPlayer.doPause()
        }, seek: function (a) {
            this.flashPlayer && this.flashPlayer.doSeek(a)
        }, live: function () {
            this.flashPlayer && this.flashPlayer.doLive()
        }, liveTime: function () {
            if (this.flashPlayer) {
                var a;
                return a = this.isLive && "m3u8" == this.type ? this.currentPlayTime : this.flashPlayer.liveTime()
            }
        }, setDuration: function (a) {
            this.flashPlayer && this.flashPlayer.setDuration(a)
        }, refreshTimeSpan: function (a, b, c, d) {
            this.flashPlayer && this.flashPlayer.refreshTimeSpan(a, b, c, d)
        }, playProgram: function (a, b, c) {
            this.flashPlayer && this.flashPlayer.playProgram(a, b, c)
        }, playChannel: function (a, b, c) {
            this.flashPlayer && this.flashPlayer.playChannel(a, b, c)
        }, toPlay: function (a, b, c, d) {
            this.flashPlayer && this.flashPlayer.toPlay(a, b, c, d)
        }, flashReady: function () {
        }, renderTo: function (b, c) {
            function d() {
                swfobject.embedSWF(g, n, "100%", "100%", "9.0.115", !1, b, h, i, function () {
                    k.flashPlayer = document.getElementById(k.instanceID)
                })
            }

            function e(a, b) {
                var c = f(a), d = '<object name="' + i.name + '" width="100%" height="100%"  style="margin:0 0 0 0" id="' + i.id + '" classid="clsid:D27CDB6E-AE6D-11cf-96B8-444553540000"><param name="allowfullscreen" value="true"/><param name="wmode" value="transparent"/><param name="allowScriptAccess" value="always"/><param name="flashvars" value="' + c + '"/><param name="movie" value="' + g + '"/></object>', e = document.createElement("iframe");
                e.frameBorder = 0, e.marginHeight = 0, e.marginWidth = 0, e.scrolling = "no", e.style.width = "100%", e.style.height = "100%", b.append(e), e.contentWindow.document.write(d), e.contentWindow.document.body.style.backgroundColor = "#000000", k.subWindow = e.contentWindow, k.flashPlayer = e.contentDocument.getElementById(i.id), k.handleIframeFlashCall()
            }

            function f(a) {
                var b;
                for (var c in a)"undefined" != typeof b ? b += "&" + c + "=" + a[c] : b = c + "=" + a[c];
                return b
            }

            var g, h = {allowfullscreen: !1, wmode: "transparent", allowscriptaccess: "always"}, i = {
                id: this.instanceID,
                name: this.instanceID
            }, j = b.swfPath;
            g = j ? this.mediaType == a.Sewise.GlobalConstant.AUDIO ? j + "flash/plugins/AudioPlayer.swf" : j + "flash/SewisePlayer.swf" : this.mediaType == a.Sewise.GlobalConstant.AUDIO ? a.Sewise.localPath + "flash/plugins/AudioPlayer.swf" : a.Sewise.localPath + "flash/SewisePlayer.swf";
            var k = this;
            this._duration = b.duration, this.type = b.type, b.programId = "", "m3u8" == b.type && !b.videoUrl && b.streamUrl && (b.videoUrl = b.streamUrl);
            var l = a.Sewise.Utils.browser.ieVersionNumber;
            if (l > 0 && 9 > l)e(b, c); else {
                var m = document.createElement("div"), n = "swf-container";
                m.id = n, c.append(m);
                var o = a.Sewise.localPath + "js/swfobject.js";
                a.Sewise.Utils.loader.loadJsFile(a.swfobject, o, d)
            }
        }
    }), c.fn.setVolume = function (a) {
        this.flashPlayer && this.flashPlayer.setVolume(a)
    }, c.fn.muted = function (a) {
        this.flashPlayer && (a ? this.flashPlayer.setVolume(0) : this.flashPlayer.setVolume(1))
    }, c.fn.getCurrentTime = function () {
        return this.currentPlayTime
    }, c.fn.setCurrentTime = function (a) {
        this.currentPlayTime = a, this.flashPlayer && this.flashPlayer.doSeek(a)
    }, c.fn.getDuration = function () {
        return this._duration
    }, c.fn.src = function (a) {
        return a ? (this.videoUrl = a, void(this.flashPlayer && this.fireEvent("canplay"))) : this.videoUrl
    }
}(window, window.jQuery), function (a, b) {
    var c = a.PlayController = function (b, c, d) {
        this.sewisePlayer = d, this.globalParam = b, this.isLive = b.server == a.GlobalConstant.LIVE ? !0 : !1, this.playVars = this.globalParam.getPlayVars(), this.playerType = this.globalParam.playerType, this.sewiseVideo = new a.SewiseVideo(this.playerType, this.isLive), this.skinController = null, this.videoContainer = null, this.playerID = c, this.globalVars = new a.GlobalVars, this.livePlayTime = null, this.serverTime = null, this.startMilliTime = 0, this.timeZoneOffsetTime = 0, this.isHtml5 = this.playerType == a.GlobalConstant.HTML5 ? !0 : !1
    };
    c.fn = c.prototype, b.extend(c.fn, a.Event), c.fn.startup = function (c, d) {
        this.videoContainer = c;
        var e = new a.PlayerSkinLoader(d, this.playVars.skin);
        if (e.on(a.SewisePlayerEvent.PLAYER_SKIN_LOADED, b.proxy(this.handleSkinLoaded, this)), e.load(this.playVars.skinClass), this.registerDataEvents(), this.playerType == a.GlobalConstant.HTML5) {
            new a.ContextMenu(this.sewisePlayer.getPlayerContainer(), this.playVars)
        }
    }, c.fn.handleSkinLoaded = function () {
        this.skinController = new a.SkinController(this.playerID, this.playVars.skinClass, this.globalParam.server), this.skinController.logo(this.playVars.logo), this.skinController.lang(this.playVars.lang), this.skinController.clarityBtnDisplay(this.playVars.clarityBtnDisplay), this.skinController.timeDisplay(this.playVars.timeDisplay), this.skinController.controlBarDisplay(this.playVars.controlBarDisplay), this.skinController.topBarDisplay(this.playVars.topBarDisplay), this.skinController.customDatas(this.playVars.customDatas), this.skinController.player(this), this.skinController.volume(this.playVars.volume), this.isLive && this.skinController.duration(this.playVars.duration), this.createSewiseVideo(), this.sewiseVideo.controls(!1), this.isLive ? this.playVars.shiftTime ? this.getShiftStreams() : this.getLiveStreams() : this.getStreams()
    }, c.fn.getStreams = function () {
        function b(a) {
            "" === e.title && (e.title = a.programname);
            for (var b = a.videos, f = 0; f < b.length; f++) {
                var g = b[f], h = {name: "", videoUrl: "", id: 0, selected: !1};
                h.name = g.name ? g.name : "", h.selected = g.selected ? g.selected : !1, h.videoUrl = g.url, h.id = f, d.globalVars.clarities.push(h), h.selected && (c = h, c.selected = !0, e.videoUrl = c.videoUrl)
            }
            c || (c = d.globalVars.clarities[0], c.selected = !0, e.videoUrl = c.videoUrl)
        }

        var c, d = this, e = this.playVars;
        if (e.programId)return void a.Utils.jsonp({
            url: e.serverPath + e.programId,
            jsonp: "callback",
            data: {mode: "vod", protocal: e.protocal},
            success: function (b) {
                e.videoUrl = b.url;
                var c = b.url.substr(b.url.length - 4, 4);
                e.type = c.indexOf("mp4") >= 0 ? "mp4" : c.indexOf("flv") >= 0 ? "flv" : a.GlobalConstant.M3U8;
                var f = {name: "默认", videoUrl: e.videoUrl, id: 0, selected: !0};
                d.globalVars.clarities.push(f), d.streamsReadyNotice(e)
            }
        });
        if (e.videosJsonUrl) {
            if (this.playerType == a.GlobalConstant.HTML5)b(e.videosJsonUrl); else {
                var f = JSON.parse(decodeURIComponent(e.videosJsonUrl));
                b(f)
            }
            return void this.streamsReadyNotice(e)
        }
        if (e.videoUrl) {
            var g = {name: "默认", videoUrl: e.videoUrl, id: 0, selected: !0};
            this.globalVars.clarities.push(g), this.streamsReadyNotice(e)
        } else this.streamsFailedNotice()
    }, c.fn.streamsReadyNotice = function (a) {
        this.isLive ? this.initTimes(a) : this.skinController.initialClarity(this.globalVars.clarities), this.skinController.programTitle(a.title), this.skinController.getVideo(), this.readyPlay(a)
    }, c.fn.streamsFailedNotice = function () {
        alert(a.SewisePlayerEvent.STREAMS_DATA_FAILED)
    }, c.fn.updatePlayTime = function () {
        var b = this, c = this.playVars;
        c.streamId && a.Utils.getScript({
            url: c.serverPath,
            data: {"do": "epg", op: "getplaytime", sessionid: c.sessionId, streamid: c.streamId, key: c.key},
            success: function () {
                return this.error ? void alert(this.error) : (epgTimes.livetime && (c.liveTime = epgTimes.livetime), epgTimes.servertime && (c.serverTime = epgTimes.servertime), void b.initTimes(c))
            }
        })
    }, c.fn.initTimes = function (a) {
        this.livePlayTime = a.liveTime ? new Date(1e3 * a.liveTime) : new Date, this.startMilliTime = this.livePlayTime.getTime(), a.serverTime ? this.serverTime = new Date(1e3 * a.serverTime) : this.serverTime || (this.serverTime = this.livePlayTime)
    }, c.fn.getLiveStreams = function () {
        var b = this.playVars, c = this;
        return b.programId ? void a.Utils.jsonp({
            url: b.serverPath + b.programId,
            data: {mode: "live", protocal: b.protocal},
            success: function (d) {
                b.streamUrl = d.url;
                var e = a.Utils.parseURL(d.url);
                b.type = "rtmp:" == e.protocol ? "rtmp" : a.GlobalConstant.M3U8, c.streamsReadyNotice(b)
            }
        }) : void(b.streamUrl ? this.streamsReadyNotice(b) : this.streamsFailedNotice())
    }, c.fn.getShiftStreams = function () {
        var b = this.playVars, c = this;
        a.Utils.jsonp({
            url: b.serverPath + b.programId,
            data: {mode: "live", protocal: b.protocal, time: b.shiftTime},
            success: function (a) {
                b.streamUrl = a.url, c.streamsReadyNotice(b)
            }
        })
    }, c.fn.createSewiseVideo = function () {
        this.registerVideoEvents(), this.sewiseVideo.init(this.playVars, this.videoContainer)
    }, c.fn.readyPlay = function (b) {
        var c = this;
        this.sewiseVideo.on("sewiseVideoReady", function () {
            c.playerType == a.GlobalConstant.HTML5 && (c.isLive ? (c.sewiseVideo.updatePlayer(b.streamUrl, b.buffer, b.shiftTime, b.poster, b.type, b.fallbackUrls, b.volume, b.hlsjs), c.sewiseVideo.play()) : (c.sewiseVideo.updatePlayer(b.videoUrl, b.buffer, b.startTime, b.poster, b.type, b.fallbackUrls, b.volume, b.hlsjs), b.autoStart && (b.startTime > 0 ? c.sewiseVideo.seek(b.startTime) : c.sewiseVideo.play()))), c.skinController.setScreenEvent()
        }), this.loadPlugins(), this.sewisePlayer.fireEvent(a.SewisePlayerEvent.PLAYER_READY), this.sewiseVideo.readyPlay()
    }, c.fn.loadPlugins = function () {
        var a = this.sewisePlayer.plugins || {};
        for (var b in a)a[b].init(this.sewisePlayer)
    }, c.fn.registerDataEvents = function () {
        this.on(a.SewisePlayerEvent.GET_VOD_STREAMS, b.proxy(function () {
            this.getStreams()
        }, this)), this.on(a.SewisePlayerEvent.GET_LIVE_STREAMS, b.proxy(function () {
            this.getLiveStreams()
        }, this)), this.on(a.SewisePlayerEvent.GET_SHIFT_STREAMS, b.proxy(function () {
            this.getShiftStreams()
        }, this))
    }, c.fn.registerVideoEvents = function () {
        this.sewiseVideo.on(a.SewisePlayerEvent.PLAY_START, b.proxy(this.playStartHandler, this)), this.sewiseVideo.on(a.SewisePlayerEvent.PLAY_PAUSE, b.proxy(this.playPauseHandler, this)), this.sewiseVideo.on(a.SewisePlayerEvent.PLAY_ENDED, b.proxy(this.playEndedHandler, this)), this.sewiseVideo.on(a.SewisePlayerEvent.DURATION_CHANGE, b.proxy(this.durationChangeHandler, this)), this.sewiseVideo.on(a.SewisePlayerEvent.TIME_UPDATE, b.proxy(this.timeupdateHandler, this)), this.sewiseVideo.on(a.SewisePlayerEvent.LOAD_PROGRESS, b.proxy(this.loadProgressHandler, this)), this.sewiseVideo.on(a.SewisePlayerEvent.BUFFER_PROGRESS, b.proxy(this.bufferProgressHandler, this)), this.sewiseVideo.on(a.SewisePlayerEvent.LOAD_OPEN, b.proxy(this.loadedOpenHandler, this)), this.sewiseVideo.on(a.SewisePlayerEvent.LOAD_COMPLETE, b.proxy(this.loadedCompleteHandler, this)), this.sewiseVideo.on(a.SewisePlayerEvent.METADATA, b.proxy(this.metadataHandler, this)), this.sewiseVideo.on(a.SewisePlayerEvent.SEEK, b.proxy(this.seekHandler, this)), this.sewiseVideo.on(a.SewisePlayerEvent.BEFORE_PLAY, b.proxy(this.beforePlayHandler, this))
    }, c.fn.playStartHandler = function () {
        this.skinController.started(), this.sewisePlayer.fireEvent(a.SewisePlayerEvent.PLAY_START), this.isLive && this.updatePlayTime()
    }, c.fn.playPauseHandler = function () {
        /*this.skinController.paused(), this.sewisePlayer.fireEvent(a.SewisePlayerEvent.PLAY_PAUSE)*/
    }, c.fn.playEndedHandler = function () {
        this.skinController.stopped(), this.sewisePlayer.fireEvent(a.SewisePlayerEvent.PLAY_ENDED)
    }, c.fn.durationChangeHandler = function () {
        this.skinController.duration(this.sewiseVideo.duration()), this.sewisePlayer.fireEvent(a.SewisePlayerEvent.DURATION_CHANGE)
    }, c.fn.timeupdateHandler = function () {
        var b = this.sewiseVideo.currentTime();
        this.isLive ? (this.livePlayTime = new Date(this.startMilliTime + 1e3 * b), this.skinController.timeUpdate(null)) : this.skinController.timeUpdate(b), this.sewisePlayer.fireEvent(a.SewisePlayerEvent.TIME_UPDATE)
    }, c.fn.metadataHandler = function (b) {
        this.sewisePlayer.fireEvent(a.SewisePlayerEvent.METADATA, b)
    }, c.fn.seekHandler = function (b) {
        this.sewisePlayer.fireEvent(a.SewisePlayerEvent.SEEK, b)
    }, c.fn.beforePlayHandler = function () {
        this.sewisePlayer.fireEvent(a.SewisePlayerEvent.BEFORE_PLAY)
    }, c.fn.loadProgressHandler = function (b) {
        var c = b.progress;
        this.isLive || this.skinController.loadedProgress(c), this.sewisePlayer.fireEvent(a.SewisePlayerEvent.LOAD_PROGRESS, {progress: b.progress})
    }, c.fn.bufferProgressHandler = function (b) {
        this.skinController.bufferProgress(b.progress), this.sewisePlayer.fireEvent(a.SewisePlayerEvent.BUFFER_PROGRESS, {progress: b.progress})
    }, c.fn.loadedOpenHandler = function () {
        this.skinController.loadedOpen(), this.sewisePlayer.fireEvent(a.SewisePlayerEvent.LOAD_OPEN)
    }, c.fn.loadedCompleteHandler = function () {
        this.skinController.loadedComplete(), this.sewisePlayer.fireEvent(a.SewisePlayerEvent.LOAD_COMPLETE)
    }, c.fn.live = function () {
        this.playerType == a.GlobalConstant.HTML5 ? this.fireEvent(a.SewisePlayerEvent.GET_LIVE_STREAMS) : this.sewiseVideo.live()
    }, c.fn.play = function () {
        this.sewiseVideo.play()
    }, c.fn.pause = function () {
        this.sewiseVideo.pause()
    }, c.fn.seek = function (b) {
        if (this.isLive) {
            if (!this.playVars.draggable)return void alert("时移已被禁用!");
            if (this.playerType == a.GlobalConstant.HTML5) {
                var c = b;
                this.playVars.shiftTime = c, this.fireEvent(a.SewisePlayerEvent.GET_SHIFT_STREAMS)
            } else this.sewiseVideo.seek(b)
        } else this.sewiseVideo.seek(b)
    }, c.fn.stop = function () {
        this.sewiseVideo.stop()
    }, c.fn.changeClarity = function (a) {
        var b = a.videoUrl, c = this.playTime() > 0 ? this.playTime() : 0;
        this.toPlay(b, this.playVars.title, c, !0)
    }, c.fn.setVolume = function (a) {
        this.sewiseVideo.volume(a), this.skinController && this.skinController.volume(a)
    }, c.fn.muted = function (a) {
        this.sewiseVideo.muted(a)
    }, c.fn.changeControlBarShowState = function (b) {
        this.sewisePlayer.fireEvent(a.SewisePlayerEvent.CONTROLBAR_SHOW_SATE, {isShow: b})
    }, c.fn.playProgram = function (b, c, d) {
        this.playVars.programId = b, this.playVars.startTime = c, this.playVars.autoStart = d, this.playVars.title = "", this.playerType == a.GlobalConstant.HTML5 ? this.fireEvent(a.SewisePlayerEvent.GET_VOD_STREAMS) : this.sewiseVideo.playProgram(b, c, d)
    }, c.fn.playChannel = function (b, c, d) {
        this.playVars.programId = b, this.playVars.shiftTime = c, this.playVars.autoStart = d, this.playVars.title = "", this.playerType == a.GlobalConstant.HTML5 ? this.fireEvent(this.playVars.shiftTime ? a.SewisePlayerEvent.GET_SHIFT_STREAMS : a.SewisePlayerEvent.GET_LIVE_STREAMS) : this.sewiseVideo.playProgram(b, c, d)
    }, c.fn.toPlay = function (b, c, d, e) {
        var f = this.playVars;
        f.videoUrl = b, f.title = c, f.startTime = d, f.autoStart = e, this.skinController.programTitle(f.title), this.playerType == a.GlobalConstant.HTML5 ? (this.sewiseVideo.updatePlayer(f.videoUrl, f.buffer, f.startTime, f.poster, f.type, f.fallbackUrls, f.volume, f.hlsjs), f.autoStart && (f.startTime > 0 ? this.sewiseVideo.seek(f.startTime) : this.sewiseVideo.play()), this.sewisePlayer.fireEvent(a.SewisePlayerEvent.UPDATE_VIDEO_URL, {url: b})) : this.sewiseVideo.toPlay(b, c, d, e)
    }, c.fn.toLivePlay = function (b, c, d, e) {
        var f = this.playVars;
        f.streamUrl = b, f.title = c, f.shiftTime = d, f.autoStart = e, this.skinController.programTitle(f.title), this.playerType == a.GlobalConstant.HTML5 ? this.fireEvent(f.shiftTime ? a.SewisePlayerEvent.GET_SHIFT_STREAMS : a.SewisePlayerEvent.GET_LIVE_STREAMS) : this.sewiseVideo.toPlay(b, c, d, e)
    }, c.fn.duration = function () {
        return this.isLive ? this.playVars.duration : this.sewiseVideo.duration()
    }, c.fn.liveTime = function (a) {
        return this.isHtml5 ? a && 0 !== this.timeZoneOffsetTime ? new Date(this.serverTime.getTime() + this.timeZoneOffsetTime) : this.serverTime : this.sewiseVideo.liveTime()
    }, c.fn.playTime = function (a) {
        return this.isLive && this.isHtml5 ? a && 0 !== this.timeZoneOffsetTime ? new Date(this.livePlayTime.getTime() + this.timeZoneOffsetTime) : this.livePlayTime : this.sewiseVideo.currentTime()
    }, c.fn.setDuration = function (a) {
        this.playVars.duration = duration, this.skinController.duration(this.playVars.duration), this.isHtml5 || this.sewiseVideo.setDuration(a)
    }, c.fn.refreshTimeSpan = function (a, b, c, d) {
        a && b && this.skinController.refreshTimes(a, b, c, d), c && (this.timeZoneOffsetTime = new Date(c).getTime() - 1e3 * d), this.isHtml5 || this.sewiseVideo.refreshTimeSpan(a, b, c, d)
    }, c.fn.shareVideo = function () {
        this.sewisePlayer.fireEvent(a.SewisePlayerEvent.SHARE_VIDEO)
    }, c.fn.getVideo = function () {
        return this.isHtml5 ? this.sewiseVideo.videoObject : this.sewiseVideo.videoObject.flashPlayer
    }, c.fn.setPlaybackRate = function (a) {
        this.isHtml5 && this.sewiseVideo.videoObject.playbackRate && (this.sewiseVideo.videoObject.playbackRate = a)
    }, c.fn.getPlaybackRate = function () {
        return this.isHtml5 ? this.sewiseVideo.videoObject.playbackRate : 1
    }
}(window.Sewise, window.jQuery), function (a, b) {
    var c = a.SewiseVideo = function (a, b) {
        this.videoObject = null, this.playerType = a, this.playVars = null, this.isLive = b, this.isHtml5 = !0, this.isCanPlay = !1, this.startTime = 0, this.loadPt = 0, this.videoContainer = null
    };
    c.fn = c.prototype, b.extend(c.prototype, a.Event), c.prototype.init = function (c, d) {
        function e() {
            f.loadedCompleteHandler(), f.videoObject.removeEventListener("canplay", e, !1), f.isCanPlay = !0, f.startTime > 0 && (f.isHtml5 ? f.videoObject.currentTime = f.startTime : f.videoObject.setCurrentTime(f.startTime))
        }

        this.playVars = c, this.videoContainer = d;
        var f = this;
        this.playerType == a.GlobalConstant.HTML5 ? (this.isHtml5 = !0, this.isCanPlay = !1, a.video && !a.Utils.browser.versions.ios && a.Utils.browser.versions.mobile ? (this.videoObject = a.video, this.videoObject.pause()) : (this.videoObject = document.createElement("video"), this.playVars.playsinline && this.videoObject.setAttribute("webkit-playsinline", !0), a.video = this.videoObject), this.videoObject.autoplay = !1, this.videoObject.controls = !0, this.videoObject.loop = !1, d.append(this.videoObject), this.videoObject.addEventListener("canplay", e, !1)) : (this.isHtml5 = !1, this.videoObject = new a.FlashVideo(this.isLive)), this.videoObject.addEventListener("emptied", b.proxy(this.loadedOpenHandler, this), !1), this.videoObject.addEventListener("waiting", b.proxy(this.loadedOpenHandler, this), !1), this.videoObject.addEventListener("seeking", b.proxy(this.seekingHandler, this), !1), this.videoObject.addEventListener("seeked", b.proxy(this.loadedCompleteHandler, this), !1), this.videoObject.addEventListener("play", b.proxy(this.playStartHandler, this), !1), this.videoObject.addEventListener("playing", b.proxy(this.playStartHandler, this), !1), this.videoObject.addEventListener("pause", b.proxy(this.playPauseHandler, this), !1), this.videoObject.addEventListener("ended", b.proxy(this.playEndedHandler, this), !1), this.videoObject.addEventListener("durationchange", b.proxy(this.durationChangeHandler, this), !1), this.videoObject.addEventListener("timeupdate", b.proxy(this.timeupdateHandler, this), !1), this.videoObject.addEventListener("progress", b.proxy(this.loadProgressHandler, this), !1), this.videoObject.addEventListener("bufferprogress", b.proxy(this.bufferProgressHandler, this), !1), this.videoObject.addEventListener("loadedmetadata", b.proxy(this.metadataHandler, this), !1), this.videoObject.addEventListener("beforePlay", b.proxy(this.beforePlayHandler, this), !1)
    }, c.prototype.readyPlay = function () {
        if (this.isHtml5)this.fireEvent("sewiseVideoReady"); else {
            var a = this;
            this.videoObject.on("flash_playerReady", function () {
                a.isCanPlay = !0, a.fireEvent("sewiseVideoReady")
            }), this.videoObject.renderTo(this.playVars, this.videoContainer)
        }
    }, c.prototype.updatePlayer = function (a, b, c, d, e, f, g, h) {
        function i() {
            k.loadedCompleteHandler(), k.videoObject.removeEventListener("canplay", i, !1), k.isCanPlay = !0, k.startTime > 0 && (k.isHtml5 ? k.videoObject.currentTime = k.startTime : k.videoObject.setCurrentTime(k.startTime))
        }

        var j = {mp4: "video/mp4", ogg: "video/ogg", webm: "video/webm", m3u8: "application/x-mpegURL"};
        this.isCanPlay = !1;
        var k = this, l = this.videoObject;
        if (l.addEventListener("canplay", i, !1), this.startTime = c, d && (l.poster = d), l.volume = g, f) {
            if (l.canPlayType)if ("" !== l.canPlayType(j[e]))l.src = a; else for (var m in f)if ("" !== l.canPlayType(j[m])) {
                l.src = f[m];
                break
            }
        } else h || (l.src = a)
    }, c.fn.play = function () {
        this.fireEvent(a.SewisePlayerEvent.BEFORE_PLAY), this.videoObject.autoplay = !0, this.videoObject.play()
    }, c.fn.pause = function () {
        this.videoObject.pause()
    }, c.fn.seek = function (a) {
        this.isCanPlay ? this.isHtml5 ? this.videoObject.currentTime = a : this.videoObject.setCurrentTime(a) : (this.videoObject.autoplay = !0, this.videoObject.play())
    }, c.fn.stop = function () {
        this.isHtml5 ? (this.videoObject.currentTime && (this.videoObject.currentTime = 0), this.videoObject.pause()) : this.videoObject.stop()
    }, c.fn.duration = function () {
        return this.isHtml5 ? this.isLive ? this.playVars.duration : this.videoObject.duration : this.videoObject.getDuration()
    }, c.fn.currentTime = function () {
        return this.isHtml5 ? this.videoObject.currentTime : this.videoObject.getCurrentTime()
    }, c.fn.muted = function (a) {
        this.videoObject && (this.isHtml5 ? this.videoObject.muted = a : this.videoObject.muted(a))
    }, c.fn.controls = function (a) {
        this.videoObject.controls = a
    }, c.fn.volume = function (a) {
        this.isHtml5 ? this.videoObject.volume = a : this.videoObject.setVolume(a)
    }, c.fn.bufferPt = function () {
        return this.loadPt
    }, c.fn.live = function () {
        this.videoObject.live()
    }, c.fn.liveTime = function () {
        return this.videoObject.liveTime()
    }, c.fn.toPlay = function (a, b, c, d) {
        this.videoObject.toPlay(a, b, c, d)
    }, c.fn.playProgram = function (a, b, c) {
        this.isLive ? this.videoObject.playChannel(a, b, c) : this.videoObject.playProgram(a, b, c)
    }, c.fn.setDuration = function (a) {
        this.videoObject.setDuration(a)
    }, c.fn.refreshTimeSpan = function (a, b, c, d) {
        this.videoObject.refreshTimeSpan(a, b, c, d)
    }, c.fn.loadedCompleteHandler = function () {
        this.fireEvent(a.SewisePlayerEvent.LOAD_COMPLETE)
    }, c.fn.loadedOpenHandler = function () {
        this.fireEvent(a.SewisePlayerEvent.LOAD_OPEN)
    }, c.fn.playStartHandler = function () {
        this.fireEvent(a.SewisePlayerEvent.PLAY_START)
    }, c.fn.playPauseHandler = function () {
        this.fireEvent(a.SewisePlayerEvent.PLAY_PAUSE)
    }, c.fn.playEndedHandler = function () {
        this.fireEvent(a.SewisePlayerEvent.PLAY_ENDED)
    }, c.fn.durationChangeHandler = function () {
        this.fireEvent(a.SewisePlayerEvent.DURATION_CHANGE)
    }, c.fn.timeupdateHandler = function () {
        this.fireEvent(a.SewisePlayerEvent.TIME_UPDATE)
    }, c.fn.loadProgressHandler = function (b) {
        if (this.isHtml5) {
            if (this.videoObject.buffered && this.videoObject.duration > 0)try {
                this.loadPt = this.videoObject.buffered.end(0) / this.videoObject.duration
            } catch (c) {
                this.loadPt = 0
            }
        } else this.loadPt = parseFloat(b);
        this.fireEvent(a.SewisePlayerEvent.LOAD_PROGRESS, {progress: this.loadPt})
    }, c.fn.seekingHandler = function (b) {
        this.fireEvent(a.SewisePlayerEvent.LOAD_OPEN), this.fireEvent(a.SewisePlayerEvent.SEEK, b)
    }, c.fn.metadataHandler = function (b) {
        this.fireEvent(a.SewisePlayerEvent.METADATA, b)
    }, c.fn.beforePlayHandler = function () {
        this.fireEvent(a.SewisePlayerEvent.BEFORE_PLAY)
    }, c.fn.bufferProgressHandler = function (b) {
        this.fireEvent(a.SewisePlayerEvent.BUFFER_PROGRESS, {progress: b})
    }
}(window.Sewise, window.jQuery), function (a) {
    var b = a.GlobalParams = function (b) {
        this.server = "", this.type = "", this.swfPath = "", this.primary = "html5", this.isMobile = !1, this.supportH5 = !0, this.supportFlash = !1, this.supportHls = !1, this.porthost = null, this.playerType = "", this.parameObj = b, this.programId = "", this.hlsjs = !1, this.protocal = "hls", this.mediaType = a.GlobalConstant.VIDEO
    };
    b.prototype.init = function () {
        this.hlsjs = "true" == this.parameObj.hlsjs ? !0 : "fasle" == this.parameObj ? !1 : this.parameObj.hlsjs;
        var b = this.parameObj.url;
        if (b) {
            var c = a.Utils.parseURL(b);
            if ("vod:" == c.protocol)this.server = "vod", this.programId = c.segments[1], this.porthost = c.host, c.port && (this.porthost += ":" + c.port), this.type = "m3u8"; else if ("live:" == c.protocol)this.server = "live", this.programId = c.segments[1], c.segments[2] && (this.protocal = c.segments[2]), this.porthost = c.host, c.port && (this.porthost += ":" + c.port), this.type = "m3u8"; else {
                var d = b.substr(b.length - 4, 4);
                "rtmp:" == c.protocol ? (this.server = "live", this.type = "rtmp", this.parameObj.streamurl = b) : d.indexOf("mp4") >= 0 ? (this.server = "vod", this.type = "mp4", this.parameObj.videourl = b) : d.indexOf("flv") >= 0 ? (this.server = "vod", this.type = "flv", this.parameObj.videourl = b) : d.indexOf("m3u8") >= 0 ? (this.parameObj.server && "live" == this.parameObj.server ? (this.server = "live", this.parameObj.streamurl = b) : (this.server = "vod", this.parameObj.videourl = b), this.type = "m3u8") : (this.type = this.parameObj.type, this.parameObj.server && "live" == this.parameObj.server ? (this.server = "live", this.parameObj.streamurl = b) : (this.server = "vod", this.parameObj.videourl = b))
            }
        } else this.server = "vod", this.type = this.parameObj.type;
        this.parameObj.swfpath && (this.swfPath = this.parameObj.swfpath), this.parameObj.primary && (this.primary = this.parameObj.primary), this.isMobile = a.Utils.browser.versions.mobile, this.supportH5 = a.Utils.browser.supportH5, this.supportFlash = a.Utils.browser.supportFlash, this.supportHls = a.Utils.browser.supportHls, this.playerType = this.getPlayerType()
    }, b.prototype.getPlayerId = function () {
    }, b.prototype.getServerType = function () {
        return this.server
    }, b.prototype.getSwfPath = function () {
        return this.swfPath
    }, b.prototype.getMediaType = function () {
        return this.mediaType
    }, b.prototype.getPlayerType = function () {
        if (this.parameObj.playerType)return this.playerType = this.parameObj.playerType, this.parameObj.playerType;
        if (this.server == a.GlobalConstant.VOD)switch (this.type) {
            case a.GlobalConstant.FLV:
                this.playerType = this.supportFlash ? a.GlobalConstant.FLASH : a.GlobalConstant.HTML5;
                break;
            case a.GlobalConstant.MP4:
                this.playerType = this.supportH5 && "flash" !== this.primary || !this.supportFlash ? a.GlobalConstant.HTML5 : a.GlobalConstant.FLASH;
                break;
            case a.GlobalConstant.M3U8:
                this.playerType = this.supportH5 && this.isMobile && "flash" !== this.primary || !this.supportFlash ? a.GlobalConstant.HTML5 : this.supportHls && this.hlsjs ? a.GlobalConstant.HTML5 : a.GlobalConstant.FLASH;
                break;
            case a.GlobalConstant.MP3:
                this.playerType = this.supportFlash && "html5" !== this.primary || !this.supportH5 ? a.GlobalConstant.FLASH : a.GlobalConstant.HTML5, this.mediaType = a.GlobalConstant.AUDIO
        } else if (this.server == a.GlobalConstant.LIVE)switch (this.type) {
            case a.GlobalConstant.RTMP:
                this.playerType = this.supportFlash ? a.GlobalConstant.FLASH : a.GlobalConstant.HTML5;
                break;
            case a.GlobalConstant.HTTP:
                this.playerType = this.supportFlash ? a.GlobalConstant.FLASH : a.GlobalConstant.HTML5;
                break;
            case a.GlobalConstant.M3U8:
                this.playerType = this.supportH5 && this.isMobile && "flash" !== this.primary || !this.supportFlash ? a.GlobalConstant.HTML5 : this.supportHls && this.hlsjs ? a.GlobalConstant.HTML5 : a.GlobalConstant.FLASH;
                break;
            case a.GlobalConstant.MP4:
                this.playerType = this.supportH5 && "flash" !== this.primary || !this.supportFlash ? a.GlobalConstant.HTML5 : a.GlobalConstant.FLASH;
                break;
            case a.GlobalConstant.MP3:
                this.playerType = this.supportFlash && "html5" !== this.primary || !this.supportH5 ? a.GlobalConstant.FLASH : a.GlobalConstant.HTML5, this.mediaType = a.GlobalConstant.AUDIO
        }
        return this.playerType
    }, b.prototype.getPlayVars = function () {
        var b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, u, v, w, x, y, z, A, B, C, D, E, F, G, H, I, J = this.parameObj;
        if (i = J.skin, j = J.skin, i ? (I = {}, I.skinCssPath = a.localPath + "html/skins/" + i + "/skin.css", I.skinHtmlPath = a.localPath + "html/skins/" + i + "/skin.html", I.skinHtmlJsPath = a.localPath + "html/skins/" + i + "/skin.html.js", i = I) : i = "", e = J.lang ? J.lang : "en_US", f = J.logo ? J.logo : "", h = this.type, s = J.volume ? J.volume : .8, t = J.key ? J.key : "", m = J.published ? J.published : 0, n = J.poster ? J.poster : "", k = J.title ? J.title : "", B = J.claritybtndisplay ? J.claritybtndisplay : "enable", C = J.timedisplay ? J.timedisplay : "enable", D = J.controlbardisplay ? J.controlbardisplay : "enable", E = J.topbardisplay ? J.topbardisplay : "enable", l = J.draggable ? J.draggable : "true", d = this.programId ? this.programId : "", F = "true" == J.playsinline ? !0 : "false" == J.playsinline ? !1 : J.playsinline, "false" == J.autostart ? J.autostart = !1 : "true" == J.autostart && (J.autostart = !0), this.server == a.GlobalConstant.VOD) {
            if (c = J.autostart ? J.autostart : !1, g = J.buffer ? J.buffer : 2, w = J.starttime ? J.starttime : 0, this.playerType == a.GlobalConstant.HTML5)A = "http://" + this.porthost + "/api/player/", u = "string" == typeof J.videosjsonurl ? J.videosjsonurl ? JSON.parse(decodeURIComponent(J.videosjsonurl)) : "" : J.videosjsonurl ? J.videosjsonurl : "", G = "string" == typeof J.fallbackurls ? J.fallbackurls ? JSON.parse(decodeURIComponent(J.fallbackurls)) : "" : J.fallbackurls ? J.fallbackurls : "", v = J.videourl ? decodeURIComponent(J.videourl) : "", o = J.playername ? decodeURIComponent(J.playername) : a.GlobalConstant.PLAYER_NAME, p = J.copyright ? decodeURIComponent(J.copyright) : a.GlobalConstant.PLAYER_COPYRIGHT, q = J.playerversion ? decodeURIComponent(J.playerversion) : a.GlobalConstant.PLAYER_VERSION, r = J.builddate ? decodeURIComponent(J.builddate) : a.GlobalConstant.BUILD_DATE; else if (this.playerType == a.GlobalConstant.FLASH) {
                if (A = "http://" + this.porthost + "/api/player/", u = "string" == typeof J.videosjsonurl ? J.videosjsonurl ? J.videosjsonurl : "" : J.videosjsonurl ? encodeURIComponent(JSON.stringify(J.videosjsonurl, "", "	")) : "", v = J.videourl ? J.videourl : "", J.videourl && !J.videourl.match(/(?:http|https|file):\/\//)) {
                    var K = window.location.href;
                    v = K.slice(0, K.lastIndexOf("/") + 1) + v
                }
                o = J.playername ? J.playername : a.GlobalConstant.PLAYER_NAME, p = J.copyright ? J.copyright : a.GlobalConstant.PLAYER_COPYRIGHT, q = J.playerversion ? J.playerversion : a.GlobalConstant.PLAYER_VERSION, r = J.builddate ? J.builddate : a.GlobalConstant.BUILD_DATE, H = this.swfPath ? this.swfPath : ""
            }
        } else this.server == a.GlobalConstant.LIVE && (c = J.autostart ? J.autostart : !0, g = J.buffer ? J.buffer : .1, y = J.shifttime ? J.shifttime : "", z = J.duration ? J.duration : 3600, this.playerType == a.GlobalConstant.HTML5 ? (A = "http://" + this.porthost + "/api/player/", u = "string" == typeof J.videosjsonurl ? J.videosjsonurl ? JSON.parse(decodeURIComponent(J.videosjsonurl)) : "" : J.videosjsonurl ? J.videosjsonurl : "", x = J.streamurl ? decodeURIComponent(J.streamurl) : "", o = J.playername ? decodeURIComponent(J.playername) : a.GlobalConstant.PLAYER_NAME, p = J.copyright ? decodeURIComponent(J.copyright) : a.GlobalConstant.PLAYER_COPYRIGHT, q = J.playerversion ? decodeURIComponent(J.playerversion) : a.GlobalConstant.PLAYER_VERSION, r = J.builddate ? decodeURIComponent(J.builddate) : a.GlobalConstant.BUILD_DATE) : this.playerType == a.GlobalConstant.FLASH && (A = "http://" + this.porthost + "/api/player/", u = "string" == typeof J.videosjsonurl ? J.videosjsonurl ? J.videosjsonurl : "" : J.videosjsonurl ? encodeURIComponent(JSON.stringify(J.videosjsonurl, "", "	")) : "", x = J.streamurl ? J.streamurl : "", o = J.playername ? J.playername : a.GlobalConstant.PLAYER_NAME, p = J.copyright ? J.copyright : a.GlobalConstant.PLAYER_COPYRIGHT, q = J.playerversion ? J.playerversion : a.GlobalConstant.PLAYER_VERSION, r = J.builddate ? J.builddate : a.GlobalConstant.BUILD_DATE));
        return b = {
            autoStart: c,
            programId: d,
            lang: e,
            logo: f,
            buffer: g,
            type: h,
            skin: i,
            skinClass: j,
            serverPath: A,
            fallbackUrls: G,
            title: k,
            draggable: l,
            published: m,
            videoUrl: v,
            startTime: w,
            poster: n,
            videosJsonUrl: u,
            playerName: o,
            copyright: p,
            playerVersion: q,
            buildDate: r,
            volume: s,
            key: t,
            swfPath: H,
            clarityBtnDisplay: B,
            timeDisplay: C,
            controlBarDisplay: D,
            topBarDisplay: E,
            protocal: this.protocal,
            playsinline: F,
            hlsjs: this.hlsjs,
            shiftTime: y,
            streamUrl: x,
            duration: z
        }
    }
}(window.Sewise), function () {
    "use strict";
    var a = "undefined" != typeof module && module.exports, b = "undefined" != typeof Element && "ALLOW_KEYBOARD_INPUT" in Element, c = function () {
        for (var a, b, c = [["requestFullscreen", "exitFullscreen", "fullscreenElement", "fullscreenEnabled", "fullscreenchange", "fullscreenerror"], ["webkitRequestFullscreen", "webkitExitFullscreen", "webkitFullscreenElement", "webkitFullscreenEnabled", "webkitfullscreenchange", "webkitfullscreenerror"], ["webkitRequestFullScreen", "webkitCancelFullScreen", "webkitCurrentFullScreenElement", "webkitCancelFullScreen", "webkitfullscreenchange", "webkitfullscreenerror"], ["mozRequestFullScreen", "mozCancelFullScreen", "mozFullScreenElement", "mozFullScreenEnabled", "mozfullscreenchange", "mozfullscreenerror"], ["msRequestFullscreen", "msExitFullscreen", "msFullscreenElement", "msFullscreenEnabled", "MSFullscreenChange", "MSFullscreenError"]], d = 0, e = c.length, f = {}; e > d; d++)if (a = c[d], a && a[1] in document) {
            for (d = 0, b = a.length; b > d; d++)f[c[0][d]] = a[d];
            return f
        }
        return !1
    }(), d = {
        request: function (a) {
            var d = c.requestFullscreen;
            a = a || document.documentElement, /5\.1[\.\d]* Safari/.test(navigator.userAgent) ? a[d]() : a[d](b && Element.ALLOW_KEYBOARD_INPUT)
        }, exit: function () {
            document[c.exitFullscreen]()
        }, toggle: function (a) {
            this.isFullscreen ? this.exit() : this.request(a)
        }, raw: c
    };
    return c ? (Object.defineProperties(d, {
        isFullscreen: {
            get: function () {
                return !!document[c.fullscreenElement]
            }
        }, element: {
            enumerable: !0, get: function () {
                return document[c.fullscreenElement]
            }
        }, enabled: {
            enumerable: !0, get: function () {
                return !!document[c.fullscreenEnabled]
            }
        }
    }), void(a ? module.exports = d : window.screenfull = d)) : void(a ? module.exports = !1 : window.screenfull = !1)
}(), function (a, b) {
    a.ControlBar = function (c, d, f, g, h) {
        function i() {
            tb = cb.width(), yb = eb.width(), Y && (Eb = Y.width()), Q.hide(), T.hide(), V.hide(), hb.hide(), a.Utils.browser.versions.mobile && W && W.hide(), K = setTimeout(o, Cb)
        }

        function j() {
            J && (Bb ? J.pause() : J.play())
        }

        function k() {
            "normal" == ob ? nb.fullScreen() : nb.noramlScreen()
        }

        function l() {
            Ab === !1 && (p(), K = setTimeout(o, Cb))
        }

        function m() {
            0 !== K && (clearTimeout(K), K = 0)
        }

        function n() {
            0 === K && (K = setTimeout(o, Cb))
        }

        function o() {
            lb && lb.hide(), C(), f.hide(), Ab = !1, J && J.changeControlBarShowState(!1)
        }

        function p() {
            lb && lb.show(), D(), f.show(), Ab = !0, J && J.changeControlBarShowState(!0)
        }

        function q(a) {
            if (!(L && bb.width() > db.width())) {
                var b = xb + (a.pageX - vb);
                b > 0 && yb > b && (bb.css("width", b), cb.css("left", b - tb / 2))
            }
        }

        function r(a) {
            M.unbind("mousemove", q), b(document).unbind("mouseup", r), wb = a.pageX, vb != wb && (xb = bb.width(), zb = xb / yb, L ? v(zb) : J.seek(zb * pb)), ub = !1
        }

        function s(a) {
            e = a.originalEvent, cb.blur();
            var b = e.targetTouches[0];
            ub = !0, vb = b.pageX, xb = bb.width(), yb = eb.width(), cb.bind("touchmove", t), cb.bind("touchend", u)
        }

        function t(a) {
            if (!(L && bb.width() > db.width()) && (e = a.originalEvent, 1 == e.targetTouches.length)) {
                e.preventDefault();
                var b = e.targetTouches[0], c = xb + (b.pageX - vb);
                c > 0 && yb > c && (bb.css("width", c), cb.css("left", c - tb / 2))
            }
        }

        function u(a) {
            if (e = a.originalEvent, cb.unbind("touchmove", t), cb.unbind("touchend", u), 1 == e.changedTouches.length) {
                var b = e.changedTouches[0];
                wb = b.pageX, vb != wb && (xb = bb.width(), zb = xb / yb, L ? v(zb) : J.seek(zb * pb))
            }
            ub = !1
        }

        function v(b) {
            var c = new Date(3600 * Math.floor(J.playTime().getTime() / 1e3 / 3600) * 1e3 + b * pb * 1e3), d = a.SkinUtils.stringer.dateToTimeStr14(c);
            J.seek(d)
        }

        function w() {
            Gb > 0 ? (J && J.muted(!1), U.show(), V.hide()) : (J && J.muted(!0), U.hide(), V.show())
        }

        function x(a) {
            var b = Fb + (a.pageX - Ib);
            b > 0 && Eb > b && (X.css("width", b), Z.css("left", b - Db / 2))
        }

        function y(a) {
            M.unbind("mousemove", x), b(document).unbind("mouseup", y), Jb = a.pageX, Ib != Jb && (Fb = X.width(), Gb = Fb / Eb, J.setVolume(Gb), w()), Hb = !1
        }

        function z(a) {
            e = a.originalEvent, Z.blur();
            var b = e.targetTouches[0];
            Hb = !0, Ib = b.pageX, Fb = X.width(), Eb = Y.width(), Z.bind("touchmove", A), Z.bind("touchend", B)
        }

        function A(a) {
            if (e = a.originalEvent, 1 == e.targetTouches.length) {
                e.preventDefault();
                var b = e.targetTouches[0], c = Fb + (b.pageX - Ib);
                c > 0 && Eb > c && (X.css("width", c), Z.css("left", c - Db / 2))
            }
        }

        function B(a) {
            if (e = a.originalEvent, Z.unbind("touchmove", A), Z.unbind("touchend", B), 1 == e.changedTouches.length) {
                var b = e.changedTouches[0];
                Jb = b.pageX, Ib != Jb && (Fb = X.width(), Gb = Fb / Eb, J.setVolume(Gb), w())
            }
            Hb = !1
        }

        function C() {
            O.css("visibility", "hidden")
        }

        function D() {
            O.css("visibility", "visible")
        }

        function E() {
            document.fullscreenElement || document.msFullscreenElement || document.mozFullScreenElement || document.webkitFullscreenElement ? d.fullScreen() : (S.show(), T.hide(), d.normalScreen()), nb.timeUpdate(qb)
        }

        function F() {
            d.resize(), nb.timeUpdate(qb)
        }

        function G() {
            d.fullScreen("not-support"), nb.timeUpdate(qb)
        }

        function H(c) {
            console.log(c)
            b(window).unbind("resize", F), c.requestFullscreen ? c.requestFullscreen() : c.msRequestFullscreen ? c.msRequestFullscreen() : c.mozRequestFullScreen ? c.mozRequestFullScreen() : c.webkitRequestFullscreen ? (c.webkitRequestFullscreen(), a.SkinUtils.browser.isXiaoMiBrowser() ? G() : a.SkinUtils.browser.isHuaweiBrowser() && G()) : N && N.webkitEnterFullscreen ? L ? (d.fullScreen("not-support"), nb.timeUpdate(qb), b(window).bind("resize", G)) : (N.play(), N.webkitEnterFullscreen(), S.show(), T.hide()) : (d.fullScreen("not-support"), nb.timeUpdate(qb), b(window).bind("resize", G)), ob = "full"
        }

        function I() {
            document.exitFullscreen ? document.exitFullscreen() : document.msExitFullscreen ? document.msExitFullscreen() : document.mozCancelFullScreen ? document.mozCancelFullScreen() : document.webkitCancelFullScreen ? (document.webkitCancelFullScreen(), E()) : (d.normalScreen(), nb.timeUpdate(qb), b(window).unbind("resize", G)), ob = "normal", b(window).bind("resize", F)
        }

        var J, K, L = h == a.GlobalConstant.LIVE ? !0 : !1, M = c.$container, N = c.$video, O = c.$controlbar, P = c.$playBtn, Q = c.$pauseBtn, R = c.$stopBtn, S = c.$fullscreenBtn, T = c.$normalscreenBtn, U = c.$soundopenBtn, V = c.$soundcloseBtn, W = c.$volumeline, X = c.$volumelineVolume, Y = c.$volumelineDragger, Z = c.$volumelinePoint, $ = c.$playtime, _ = c.$totaltime, ab = c.$shareBtn, bb = c.$progressPlayedLine, cb = c.$progressPlayedPoint, db = c.$progressLoadedLine, eb = c.$progressSeekLine, fb = c.$liveBtn, gb = c.$topbarClock, hb = c.$buffer, ib = c.$bufferTip, jb = c.$bufferText, kb = c.$bigPlayBtn, lb = c.$claritySwitchBtn, mb = c.$clarityBtnText, nb = this, ob = "normal", pb = .1, qb = 0, rb = "00:00:00", sb = "00:00:00", tb = 0, ub = !1, vb = 0, wb = 0, xb = 0, yb = 0, zb = 0, Ab = !0, Bb = !1, Cb = 5e3, Db = 0, Eb = 0, Fb = 0, Gb = 0, Hb = !1, Ib = 0, Jb = 0, Kb = !1;
        i(), this.setScreenEvent = function () {
            var a;
            J.isHtml5 ? (a = M, a.click(function () {
                a.mousemove(), j()
            }), a.dblclick(function () {
                k()
            })) : (a = J.sewiseVideo.videoObject, a.on("singleClick", function () {
                j()
            }), a.on("doubleClick", function () {
                k()
            }))
        }, M.bind({mousemove: l, touchmove: l}), O.bind({mouseover: m, touchstart: m}), O.bind({
            mouseout: n,
            touchend: n
        }), O.click(function (a) {
            a.originalEvent.stopPropagation ? a.originalEvent.stopPropagation() : a.originalEvent.cancelBubble = !0
        }), P.click(function () {
            J.play()
        }), Q.click(function () {
            J.pause()
        }), R.click(function () {
            J.stop()
        }), fb && fb.click(function () {
            J.live()
        }), kb.click(function (a) {
            a.originalEvent.stopPropagation ? a.originalEvent.stopPropagation() : a.originalEvent.cancelBubble = !0, J.play()
        }), S.click(function () {
            nb.fullScreen();
            console.log(123);
        }), T.click(function () {
            nb.noramlScreen()
        }), U.click(function () {
            J.muted(!0), U.hide(), V.show(), X && (X.css("width", 0), Z.css("left", -Db / 2))
        }), V.click(function () {
            J.muted(!1), U.show(), V.hide(), X && (X.css("width", Fb), Z.css("left", Fb - Db / 2))
        }), ab && ab.click(function () {
            J && J.shareVideo()
        }), lb && lb.click(function (a) {
            a.originalEvent.stopPropagation ? a.originalEvent.stopPropagation() : a.originalEvent.cancelBubble = !0, g.toggle()
        }), eb.mousedown(function (a) {
            xb = a.pageX - a.target.getBoundingClientRect().left, yb = eb.width(), bb.css("width", xb), cb.css("left", xb - tb / 2), zb = xb / yb, L ? v(zb) : J.seek(zb * pb)
        }), cb.mousedown(function (a) {
            this.blur(), ub = !0, vb = a.pageX, xb = bb.width(), yb = eb.width(), M.bind("mousemove", q), b(document).bind("mouseup", r)
        }), cb.bind("touchstart", s), Y && Y.mousedown(function (a) {
            Fb = a.pageX - a.target.getBoundingClientRect().left, Eb = Y.width(), X.css("width", Fb), Z.css("left", Fb - Db / 2), Gb = Fb / Eb, J.setVolume(Gb), w()
        }), Z && Z.mousedown(function (a) {
            this.blur(), Hb = !0, Ib = a.pageX, Fb = X.width(), Eb = Y.width(), M.bind("mousemove", x), b(document).bind("mouseup", y)
        }), Z && Z.bind("touchstart", z), document.addEventListener && (document.addEventListener("fullscreenchange", E), document.addEventListener("MSFullscreenChange", E), document.addEventListener("mozfullscreenchange", E), document.addEventListener("webkitfullscreenchange", E)), b(window).bind("resize", F), this.setPlayer = function (a) {
            J = a
        }, this.started = function () {
            P.hide(), Q.show(), kb.hide(), Bb = !0
        }, this.paused = function () {
            P.show(), Q.hide(), kb.show(), Bb = !1
        }, this.stopped = function () {
            P.show(), Q.hide(), kb.show(), Bb = !1
        }, this.setDuration = function (b) {
            L ? pb = b : (pb = 1 / 0 != b ? b : 3600, b > 1 && (_ ? (sb = a.SkinUtils.stringer.secondsToMS(pb), _.text(sb)) : sb = a.SkinUtils.stringer.secondsToHMS(pb)))
        }, this.timeUpdate = function (b) {
            var c;
            if (L) {
                var d = J.playTime();
                if (!d)return;
                if (!d.getTime)return;
                if (Kb || (sb = a.SkinUtils.stringer.dateToStrHMS(new Date(Math.ceil(d.getTime() / 1e3 / pb) * pb * 1e3)), rb = a.SkinUtils.stringer.dateToStrHMS(new Date(Math.floor(d.getTime() / 1e3 / pb) * pb * 1e3)), $.text(rb + "/" + sb)), ub)return;
                c = Math.floor(d.getTime() / 1e3) % pb / pb;
                var e, f = J.liveTime(), g = Math.ceil(d.getTime() / 1e3 / 3600), h = Math.floor(f.getTime() / 1e3 / 3600);
                e = h >= g ? 1 : Math.floor(f.getTime() / 1e3) % pb / pb;
                var i = 100 * e + "%";
                db.css("width", i)
            } else {
                if ((void 0 === b || 1 / 0 === b) && (b = 0), qb = b, _ ? (rb = a.SkinUtils.stringer.secondsToMS(qb), $.text(rb)) : (rb = a.SkinUtils.stringer.secondsToHMS(qb), $.text(rb + "/" + sb)), ub)return;
                c = qb / pb
            }
            xb = 100 * c + "%", bb.css("width", xb);
            var j = bb.width() - tb / 2;
            cb.css("left", j)
        }, this.loadProgress = function (a) {
            var b = 100 * a + "%";
            db.css("width", b)
        }, this.initVolume = function (a) {
            X && (Gb = a, Fb = Eb * Gb, X.css("width", Fb), Z.css("left", Fb - Db / 2), w())
        }, this.hide2 = function () {
            O.hide()
        }, this.hideTopbarClock = function () {
            gb.hide()
        }, this.hideClarityBtn = function () {
            lb && lb.hide()
        }, this.updateClarityBtnPosition = function () {
            lb && (lb.css("top", "0%"), lb.css("margin-top", "-5px"))
        }, this.updateClarityBtnText = function (a) {
            mb && mb.text(a)
        }, this.fullScreen = function () {
            console.log(111111)
            S.hide(), T.show(), H(M.get(0))
        }, this.noramlScreen = function () {
            S.show(), T.hide(), I()
        }, this.showBuffer = function () {
            hb.show()
        }, this.hideBuffer = function () {
            hb.hide()
        }, this.bufferProgress = function (a) {
            jb.text(parseInt(100 * a) + "%")
        }, this.initLanguage = function () {
            var b = a.SkinUtils.language.getString("loading");
            ib.text(b)
        }, this.refreshTimes = function (b, c) {
            Kb = !0, $.text(b + "/" + c);
            var d = a.SkinUtils.stringer.hmsToSeconds(c), e = a.SkinUtils.stringer.hmsToSeconds(b);
            pb = d > e ? d - e : a.SkinUtils.stringer.hmsToSeconds("24:00:00") - e + d
        }, this.getProgressSeekline = function () {
            return eb.get(0)
        }
    }
}(window.Sewise, window.jQuery), function (a, b) {
    a.ElementLayout = function (c) {
        function d() {
            0 > q && (q += h.width(), h.hide()), g.css("width", q)
        }

        function e(a) {
            var b = 0;
            return b += c.$playBtn.width(), b += c.$playtime.width(), b += c.$soundopenBtn.width(), b += c.$fullscreenBtn.width(), c.$stopBtn && c.$stopBtn.length && (b += c.$stopBtn.width()), c.$liveBtn && c.$liveBtn.length && (b += c.$liveBtn.width()), c.$volumeline && !a && c.$volumeline.length && (b += c.$volumeline.width()), c.$totaltime && c.$totaltime.length && (b += c.$totaltime.width() + 40), b += 18
        }

        var f = c.$container, g = c.$controlBarProgress, h = c.$playtime, i = c.defStageWidth, j = c.defStageHeight, k = c.defLeftValue, l = c.defTopValue, m = c.defOffsetX, n = c.defOffsetY, o = c.defOverflow, p = 0;
        p = c.progressBarIsUp ? 0 : e(a.Utils.browser.versions.mobile);
        var q = parseInt(i) - p - 50;
        d(), this.fullScreen = function (a) {
            if ("not-support" == a) {
                b("body").css("overflow", "hidden");
                var c, d = b(window).width(), e = b(window.parent.document).find("#playIframe");
                e.length > 0 ? (b(window.parent.document.body).addClass("sewiseFullScreen"), c = b(window.parent.window).height(), b(e).height(c)) : (b("body").addClass("sewiseFullScreen"), c = b(window).height()), f.css("width", d), f.css("height", c);
                var i = b(document).scrollLeft(), j = b(document).scrollTop(), o = (parseInt(b("body").css("margin-left")), parseInt(b("body").css("margin-top"))), q = k - m + i + "px", r = l - n + j - o + "px";
                f.css("left", q), f.css("top", r)
            } else f.css("width", "100%"), f.css("height", "100%");
            var s = parseInt(b(window).width()) - p -50;
            0 > s ? (s += h.width(), h.hide()) : h.show(), g.css("width", s)
        }, this.normalScreen = function () {
            f.css("width", "100%"), f.css("height", "100%"), f.css("left", k), f.css("top", l);
            var a = b(window.parent.document).find("#playIframe");
            a.length > 0 ? (b(window.parent.document.body).removeClass("sewiseFullScreen"), b(a).css("height", "100%")) : b("body").removeClass("sewiseFullScreen"), b("body").css("overflow", o), i = f.width(), q = parseInt(i) - p, 0 > q ? (q += h.width(), h.hide()) : h.show(), g.css("width", q)
        }, this.resize = function () {
            i = f.width(), j = f.height(), q = parseInt(i) - p - 50, 0 > q ? (q += h.width(), h.hide()) : h.show(), g.css("width", q)
        }
    }
}(window.Sewise, window.jQuery), function (a, b) {
    a.ElementObject = function (a, c) {
        var d = "#" + a + " ." + c + " .sewise-player-ui";
        this.$sewisePlayerUi = b(d), this.$container = this.$sewisePlayerUi.parent().parent(), this.$video = null, this.$controlbar = this.$sewisePlayerUi.find(".controlbar"), this.$controlbarBtns = this.$sewisePlayerUi.find(".controlbar-btns"), this.$playBtn = this.$sewisePlayerUi.find(".controlbar-btns-play"), this.$pauseBtn = this.$sewisePlayerUi.find(".controlbar-btns-pause"), this.$stopBtn = this.$sewisePlayerUi.find(".controlbar-btns-stop"), this.$fullscreenBtn = this.$sewisePlayerUi.find(".controlbar-btns-fullscreen"), this.$normalscreenBtn = this.$sewisePlayerUi.find(".controlbar-btns-normalscreen"), this.$soundopenBtn = this.$sewisePlayerUi.find(".controlbar-btns-soundopen"), this.$soundcloseBtn = this.$sewisePlayerUi.find(".controlbar-btns-soundclose"), this.$shareBtn = this.$sewisePlayerUi.find(".controlbar-btns-share").length > 0 ? this.$sewisePlayerUi.find(".controlbar-btns-share") : null, this.$liveBtn = this.$sewisePlayerUi.find(".controlbar-btns-live").length > 0 ? this.$sewisePlayerUi.find(".controlbar-btns-live") : null, this.$sewisePlayerUi.find(".controlbar-volumeline-volume").get(0) ? (this.$volumeline = this.$sewisePlayerUi.find(".controlbar-volumeline"), this.$volumelineVolume = this.$sewisePlayerUi.find(".controlbar-volumeline-volume"), this.$volumelineDragger = this.$sewisePlayerUi.find(".controlbar-volumeline-dragger"), this.$volumelinePoint = this.$sewisePlayerUi.find(".controlbar-volumeline-point")) : (this.$volumeline = null, this.$volumelineVolume = null, this.$volumelineDragger = null, this.$volumelinePoint = null), this.$playtime = this.$sewisePlayerUi.find(".controlbar-playtime"), this.$totaltime = this.$sewisePlayerUi.find(".controlbar-totaltime").get(0) ? this.$sewisePlayerUi.find(".controlbar-totaltime") : null, this.$controlBarProgress = this.$sewisePlayerUi.find(".controlbar-progress"), this.$progressPlayedLine = this.$sewisePlayerUi.find(".controlbar-progress-playedline"), this.$progressPlayedPoint = this.$sewisePlayerUi.find(".controlbar-progress-playpoint"), this.$progressLoadedLine = this.$sewisePlayerUi.find(".controlbar-progress-loadedline"), this.$progressSeekLine = this.$sewisePlayerUi.find(".controlbar-progress-seekline"), this.$logo = this.$sewisePlayerUi.find(".logo"), this.$logoIcon = this.$sewisePlayerUi.find(".logo-icon"), this.$topbar = this.$sewisePlayerUi.find(".topbar"), this.$programTip = this.$sewisePlayerUi.find(".topbar-program-tip"), this.$programTitle = this.$sewisePlayerUi.find(".topbar-program-title"), this.$topbarClock = this.$sewisePlayerUi.find(".topbar-clock"), this.$buffer = this.$sewisePlayerUi.find(".buffer"), this.$bufferTip = this.$sewisePlayerUi.find(".buffer-text-tip"), this.$bufferText = this.$sewisePlayerUi.find(".buffer-text-bufferPt"), this.$bigPlayBtn = this.$sewisePlayerUi.find(".big-play-btn"), this.$sewisePlayerUi.find(".clarity-switch-btn").get(0) ? (this.$claritySwitchBtn = this.$sewisePlayerUi.find(".clarity-switch-btn"), this.$clarityBtnText = this.$sewisePlayerUi.find(".clarity-btn-text")) : (this.$claritySwitchBtn = null, this.$clarityBtnText = null), this.progressBarIsUp = this.$controlbarBtns.find(".controlbar-progress").length > 0 ? !1 : !0, this.defStageWidth = this.$container.width(), this.defStageHeight = this.$container.height(), this.defLeftValue = parseInt(this.$container.css("left")), this.defTopValue = parseInt(this.$container.css("top")), this.defOffsetX = this.$container.get(0).getBoundingClientRect().left, this.defOffsetY = this.$container.get(0).getBoundingClientRect().top, this.defOverflow = b("body").css("overflow"), this.getVideo = function () {
            this.$video = this.$container.find("video").get(0)
        }
    }
}(window.Sewise, window.jQuery), function (a) {
    a.LogoBox = function (a) {
        var b = a.$logoIcon;
        b.click(function (a) {
            a.originalEvent.stopPropagation()
        });
        var c = "http://zhibo.speiyou.com/index.html";
        this.setLogo = function (a) {
            b.css("background", "url(" + a + ") 0px 0px no-repeat"), b.attr("href", c)
        }, this.setLink = function (a) {
            c = a, b.attr("href", c)
        }
    }
}(window.Sewise, window.jQuery), function (a, b) {
    var c = a.PlayerSkinLoader = function (b, c) {
        function d() {
            alert("skinLoadedError")
        }

        function e() {
            var c = document.getElementsByTagName("body")[0], d = document.createElement("iframe");
            d.style.display = "none", d.src = l, d.onload = d.onreadystatechange = function () {
                try {
                    if (null === d)return;
                    var e;
                    e = d.contentWindow.document.getElementsByClassName ? d.contentWindow.document.getElementsByClassName("sewise-player-ui")[0] : f("sewise-player-ui", d.contentWindow.document)[0];
                    var h = document.createElement("div");
                    b.append(h), h.outerHTML = e.outerHTML, c.removeChild(d), d = null, n.fireEvent(a.SewisePlayerEvent.PLAYER_SKIN_LOADED)
                } catch (i) {
                    c.removeChild(d), g()
                }
            }, c.appendChild(d)
        }

        function f(a, b) {
            for (var c = b.getElementsByTagName("*"), d = c.length, e = [], f = 0; d > f; f++) {
                var g = c[f].className || "";
                if (!(g.indexOf(a) < 0)) {
                    g = g.split(/\s+/);
                    for (var h = g.length, i = 0; h > i; i++)if (a == g[i]) {
                        e.push(c[f]);
                        break
                    }
                }
            }
            return e
        }

        function g() {
            a.Utils.loader.loadJsFile("override", m, h, i)
        }

        function h() {
            var c = window.SewisePlayerSkin.localSkin;
            b.append(j(c)[0]), n.fireEvent(a.SewisePlayerEvent.PLAYER_SKIN_LOADED)
        }

        function i() {
            d()
        }

        function j(a) {
            var b = document.createElement("div");
            return "string" == typeof a && (b.innerHTML = a), b.childNodes
        }

        var k = c.skinCssPath, l = c.skinHtmlPath, m = c.skinHtmlJsPath, n = this;
        this.load = function (c) {
            b.addClass(c), a.Utils.loader.loadCssFile(k, d), e()
        }
    };
    b.extend(c.prototype, a.Event)
}(window.Sewise, window.jQuery), function (a, b) {
    a.ClarityWindow = function (c) {
        var d, e, f, g, h, i = c.$container, j = "", k = "", l = 0, m = 0;
        this.setPlayer = function (a) {
            d = a
        }, this.setControlBar = function (a) {
            e = a
        }, this.initialClarities = function (c) {
            var n = a.SkinUtils.language.getString("claritySetting"), o = a.SkinUtils.language.getString("clarityOk"), p = a.SkinUtils.language.getString("clarityCancel");
            g = c, h = g.length;
            for (var q = 0; h > q; q++) {
                var r;
                g[q].selected ? (r = ' checked = "checked" ', l = q, e.updateClarityBtnText(g[q].name)) : r = " ", j += '<input style="width: 20px; height: 18px; " type="radio" name="radio_clarity"' + r + '"value="' + g[q].name + '">' + g[q].name + "\n"
            }
            k = '<div style="position:absolute; width: 300px; height: 140px; color: #FFF; border: 2px solid #FF9501; padding: 10px; background:rgba(255, 149, 1, 0.3); "><div><div style="float: left; ">' + n + '</div><div style="float: right; "><a href="javascript:;" name="cancel_clarity" style="color: #FFF; font-weight:bold; text-decoration: none; padding: 4px 6px; ">X</a></div></div><div style="width: 100%; height: 40px; padding: 30px 0px 10px 0px; text-align: center; clear: both;">' + j + '</div><div style="padding: 10px; text-align: center; "><a href="javascript:;" name="confirm_clarity" style="color: #FFF; text-decoration: none; background-color: #FF9501; padding: 5px 10px; margin-right: 20px; ">' + o + '</a><a href="javascript:;" name="cancel_clarity" style="color: #FFF; text-decoration: none; background-color: #FF9501; padding: 5px 10px; margin-left: 20px; ">' + p + "</a></div><div>", f = b("<div></div>"), f.html(k), f.css({
                position: "absolute",
                left: "50%",
                top: "50%",
                "margin-left": "-162px",
                "margin-top": "-82px"
            }), f.hide(), f.appendTo(i), f.click(function (a) {
                a.originalEvent.stopPropagation ? a.originalEvent.stopPropagation() : a.originalEvent.cancelBubble = !0
            }), f.find("[name = confirm_clarity]").click(function (a) {
                a.originalEvent.stopPropagation ? a.originalEvent.stopPropagation() : a.originalEvent.cancelBubble = !0, f.hide(), l != m && (l = m, e.updateClarityBtnText(g[l].name), d.changeClarity({
                    name: g[l].name,
                    videoUrl: g[l].videoUrl,
                    id: g[l].id,
                    selected: !0
                }))
            }), f.find("[name = cancel_clarity]").click(function (a) {
                a.originalEvent.stopPropagation ? a.originalEvent.stopPropagation() : a.originalEvent.cancelBubble = !0, f.hide(), m = l
            }), f.find("[name = radio_clarity]").click(function (a) {
                a.originalEvent.stopPropagation ? a.originalEvent.stopPropagation() : a.originalEvent.cancelBubble = !0, m = b(a.target).index()
            })
        }, this.toggle = function () {
            f.toggle(), f.find("[name = radio_clarity]").get(l).checked = !0, m = l
        }
    }
}(window.Sewise, window.jQuery), function (a) {
    a.SkinController = function (b, c, d) {
        var e, f = d == a.GlobalConstant.LIVE ? !0 : !1, g = new a.ElementObject(b, c), h = new a.ElementLayout(g), i = new a.LogoBox(g), j = new a.TopBar(g, d), k = null;
        g.$claritySwitchBtn && (k = new a.ClarityWindow(g));
        var l = new a.ControlBar(g, h, j, k, d);
        this.getVideo = function () {
            g.getVideo(), g.$video && $(g.$video).css("pointer-events", "none")
        }, this.player = function (a) {
            e = a, l.setPlayer(e), k && k.setPlayer(e)
        }, this.started = function () {
            l.hideBuffer(), l.started()
        }, this.paused = function () {
            l.paused()
        }, this.stopped = function () {
            l.stopped()
        }, this.duration = function (a) {
            l.setDuration(a)
        }, this.timeUpdate = function (a) {
            l.timeUpdate(a), f && j.setLiveClock(e.playTime())
        }, this.bufferProgress = function (a) {
            l.bufferProgress(a)
        }, this.loadedProgress = function (a) {
            l.loadProgress(a)
        }, this.loadedOpen = function () {
            l.showBuffer()
        }, this.loadedComplete = function () {
            l.hideBuffer()
        }, this.programTitle = function (a) {
            j.setTitle(a)
        }, this.logo = function (a) {
            i.setLogo(a)
        }, this.volume = function (a) {
            l.initVolume(a)
        }, this.initialClarity = function (a) {
            k && (k.setControlBar(l), k.initialClarities(a))
        }, this.clarityBtnDisplay = function (a) {
            "enable" != a && l.hideClarityBtn()
        }, this.timeDisplay = function (a) {
            "enable" != a && l.hideTopbarClock()
        }, this.controlBarDisplay = function (a) {
            "enable" != a && l.hide2()
        }, this.topBarDisplay = function (a) {
            "enable" != a && (j.hide2(), l.updateClarityBtnPosition())
        }, this.customDatas = function (a) {
            a && a.logoLink && i.setLink(a.logoLink)
        }, this.fullScreen = function () {
            l.fullScreen()
        }, this.noramlScreen = function () {
            l.noramlScreen()
        }, this.lang = function (b) {
            a.SkinUtils.language.init(b), l.initLanguage(), j.initLanguage()
        }, this.refreshTimes = function (a, b) {
            l.refreshTimes(a, b)
        }, this.setScreenEvent = function () {
            l.setScreenEvent()
        }, this.getProgressSeekline = function () {
            return l.getProgressSeekline()
        }
    }
}(window.Sewise), function (a) {
    a.TopBar = function (b, c) {
        function d() {
            var b = a.SkinUtils.stringer.dateToTimeString();
            h.text(b)
        }

        var e = b.$topbar, f = b.$programTip, g = b.$programTitle, h = b.$topbarClock, i = a.SkinUtils.language.getString("titleTip");
        if (f.text(i), c == a.GlobalConstant.VOD) {
            setInterval(d, 1e3)
        }
        this.setLiveClock = function (b) {
            var c = a.SkinUtils.stringer.dateToTimeString(b);
            h.text(c)
        }, this.setTitle = function (a) {
            g.text(a)
        }, this.show = function () {
            e.css("visibility", "visible")
        }, this.hide = function () {
            e.css("visibility", "hidden")
        }, this.hide2 = function () {
            e.hide()
        }, this.initLanguage = function () {
            var b = a.SkinUtils.language.getString("titleTip");
            f.text(b)
        }
    }
}(window.Sewise, window.jQuery), function (a, b) {
    var c = a.Sewise.SewisePlayer = function (b) {
        this.config = b, this.playerContainer = null, this.videoContainer = null, this.skinContainer = null, this.config = b, this.plugins = null, this.globalParams = new a.Sewise.GlobalParams(b), this.globalParams.init(), this.isLive = this.globalParams.server == a.Sewise.GlobalConstant.LIVE ? !0 : !1, this.playerID = "SewisePlayer" + c.guid++;
        this.globalParams.playerType;
        this.playController = new a.Sewise.PlayController(this.globalParams, this.playerID, this)
    };
    c.fn = c.prototype, b.extend(c, {
        guid: 0, supportHls: function () {
            return window.MediaSource && window.MediaSource.isTypeSupported('video/mp4; codecs="avc1.42E01E,mp4a.40.2"')
        }()
    }), b.extend(c.fn, a.Sewise.Event), c.fn.startup = function () {
        var d;
        if (this.config.elid) {
            var e = "#" + this.config.elid;
            d = b(e)
        } else {
            var f = this.config.scriptElement.parentNode;
            d = b(f)
        }
        d.append(c.template), this.playerContainer = d.find(".sewiseplayer-container"), this.videoContainer = d.find(".sewiseplayer-video"), this.skinContainer = d.find(".sewiseplayer-skin"), this.playerContainer.attr("id", this.playerID), a.Sewise.Utils.loader.loadCssFile(a.Sewise.localPath + "css/sewiseplayer.css"), this.playController.startup(this.videoContainer, this.skinContainer)
    }, c.template = '<div class="sewiseplayer-container"><div class="sewiseplayer-video"></div><div class="sewiseplayer-skin"></div></div>', c.fn.play = function () {
        this.playController.play()
    }, c.fn.pause = function () {
        this.playController.pause()
    }, c.fn.stop = function () {
        this.playController.stop()
    }, c.fn.seek = function (a) {
        this.playController.seek(a)
    }, c.fn.setVolume = function (a) {
        this.playController.setVolume(a)
    }, c.fn.muted = function (a) {
        this.playController.muted(a)
    }, c.fn.playProgram = function (a, b, c) {
        this.isLive ? this.playController.playChannel(a, b, c) : this.playController.playProgram(a, b, c)
    }, c.fn.toPlay = function (a, b, c, d) {
        this.isLive ? this.playController.toLivePlay(a, b, c, d) : this.playController.toPlay(a, b, c, d)
    }, c.fn.duration = function () {
        return this.playController.duration()
    }, c.fn.playTime = function () {
        return this.playController.playTime()
    }, c.fn.getPlayerContainer = function () {
        return this.playerContainer.get(0)
    }, c.fn.getVideoContainer = function () {
        return this.videoContainer.get(0)
    }, c.fn.getSkinContainer = function () {
        return this.skinContainer.get(0)
    }, c.fn.getVideo = function () {
        return this.playController.getVideo()
    }, c.fn.setPlaybackRate = function (a) {
        this.playController.setPlaybackRate(a)
    }, c.fn.getPlaybackRate = function () {
        return this.playController.getPlaybackRate()
    }, c.fn.changeClarity = function (a) {
        this.playController.changeClarity(a)
    }, c.fn.live = function () {
        this.playController.live()
    }, c.fn.liveTime = function () {
        return this.playController.liveTime()
    }, c.fn.setDuration = function (a) {
        this.playController.setDuration(a)
    };
    var d = ["SewisePlayer.js", "sewise.player.min.js"], e = a.Sewise.Utils.getParameters(d);
    if (!a.Sewise.Utils.object.isEmpty(e) && a.Sewise.Utils.object.paramsLength(e) > 1) {
        var f = new a.Sewise.SewisePlayer(e);
        f.startup(), a.SewisePlayer = f
    }
}(window, window.jQuery);